[{"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\index.tsx":"1","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\App.tsx":"2","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\API.ts":"3","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\utils.ts":"4","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\createQuestions\\CreateQuestionsPage.tsx":"5","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\quizGame\\QuizGame.tsx":"6","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\App.styles.ts":"7","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\quizGame\\QuizGame.styles.ts":"8","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\createQuestions\\CreateQuestion.styles.ts":"9","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\navigation\\index.ts":"10","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\navigation\\Navigation.tsx":"11","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\index.ts":"12","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\createQuestions\\index.ts":"13","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\quizGame\\index.ts":"14","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\homePage\\index.ts":"15","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\homePage\\HomePage.tsx":"16","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\questionCard\\QuestionCard.tsx":"17","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\homePage\\HomePage.styles.ts":"18","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\index.ts":"19","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\pageHeader\\index.ts":"20","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\questionCard\\index.ts":"21","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\pageHeader\\PageHeader.tsx":"22","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\pageHeader\\PageHeader.styles.ts":"23","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\viewAllQuestions\\index.ts":"24","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\viewAllQuestions\\ViewAllQuestions.tsx":"25","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\questionCardSmall\\index.ts":"26","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\questionCardSmall\\QuestionCardSmall.tsx":"27","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\questionCardSmall\\QuestionCardSmall.styles.ts":"28","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\navBar\\index.ts":"29","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\navBar\\NavBar.tsx":"30","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\navBar\\NavBar.styles.ts":"31","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\viewAllQuestions\\ViewAllQuestions.styles.ts":"32","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\questionIndex\\index.ts":"33","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\questionIndex\\QuestionIndex.tsx":"34","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\questionIndex\\QuestionIndex.styles.ts":"35"},{"size":197,"mtime":1611340767902,"results":"36","hashOfConfig":"37"},{"size":392,"mtime":1611532364547,"results":"38","hashOfConfig":"37"},{"size":2001,"mtime":1611553601047,"results":"39","hashOfConfig":"37"},{"size":207,"mtime":1611547388835,"results":"40","hashOfConfig":"37"},{"size":13317,"mtime":1611552880372,"results":"41","hashOfConfig":"37"},{"size":2629,"mtime":1611531714864,"results":"42","hashOfConfig":"37"},{"size":1535,"mtime":1611555793967,"results":"43","hashOfConfig":"37"},{"size":1005,"mtime":1611531976117,"results":"44","hashOfConfig":"37"},{"size":2020,"mtime":1611542572741,"results":"45","hashOfConfig":"37"},{"size":29,"mtime":1611530699922,"results":"46","hashOfConfig":"37"},{"size":646,"mtime":1611536833197,"results":"47","hashOfConfig":"37"},{"size":129,"mtime":1611536628390,"results":"48","hashOfConfig":"37"},{"size":38,"mtime":1611530627401,"results":"49","hashOfConfig":"37"},{"size":27,"mtime":1611530642442,"results":"50","hashOfConfig":"37"},{"size":27,"mtime":1611531614944,"results":"51","hashOfConfig":"37"},{"size":874,"mtime":1611536898664,"results":"52","hashOfConfig":"37"},{"size":1073,"mtime":1611530551440,"results":"53","hashOfConfig":"37"},{"size":268,"mtime":1611543253726,"results":"54","hashOfConfig":"37"},{"size":194,"mtime":1611557731076,"results":"55","hashOfConfig":"37"},{"size":29,"mtime":1611532301236,"results":"56","hashOfConfig":"37"},{"size":31,"mtime":1611532288361,"results":"57","hashOfConfig":"37"},{"size":272,"mtime":1611541412977,"results":"58","hashOfConfig":"37"},{"size":307,"mtime":1611542238912,"results":"59","hashOfConfig":"37"},{"size":35,"mtime":1611536777048,"results":"60","hashOfConfig":"37"},{"size":1284,"mtime":1611560068264,"results":"61","hashOfConfig":"37"},{"size":36,"mtime":1611537915954,"results":"62","hashOfConfig":"37"},{"size":1153,"mtime":1611547411751,"results":"63","hashOfConfig":"37"},{"size":622,"mtime":1611543712743,"results":"64","hashOfConfig":"37"},{"size":25,"mtime":1611541360282,"results":"65","hashOfConfig":"37"},{"size":777,"mtime":1611543110217,"results":"66","hashOfConfig":"37"},{"size":287,"mtime":1611542156346,"results":"67","hashOfConfig":"37"},{"size":447,"mtime":1611552729134,"results":"68","hashOfConfig":"37"},{"size":32,"mtime":1611545858029,"results":"69","hashOfConfig":"37"},{"size":1652,"mtime":1611560039644,"results":"70","hashOfConfig":"37"},{"size":342,"mtime":1611552002218,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"ki0vap",{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\index.tsx",[],["152","153"],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\App.tsx",["154","155"],"import React, { useState } from \"react\";\r\nimport { AppStyle, Wrapper } from \"./App.styles\";\r\nimport { Navigation, PageHeader } from './components';\r\n\r\nconst App = () => {\r\n  const [option, setOption] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n        <AppStyle />\r\n        <PageHeader />\r\n        <Wrapper>\r\n          <Navigation />\r\n        </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\API.ts",["156"],"import { shuffleArray } from \"./utils\";\r\n\r\nexport type Question = {\r\n  category: string;\r\n  correct_answer: string;\r\n  difficulty: string;\r\n  incorrect_answers: string[];\r\n  question: string;\r\n  type: QuestionType;\r\n  _id: string;\r\n};\r\n\r\nexport enum Difficulty {\r\n  EASY = \"easy\",\r\n  MEDIUM = \"medium\",\r\n  HARD = \"hard\",\r\n}\r\n\r\nexport enum QuestionType {\r\n  MULTIPLE_CHOICE = 'multiple-choice',\r\n  TRUE_FALSE = 'true-false',\r\n  OPEN_ENDED = 'open-ended'\r\n}\r\n\r\nexport type QuestionsState = Question & { answers: string[] };\r\n\r\nexport const fetchQuizQuestions = async (\r\n  amount: number,\r\n  difficulty: Difficulty\r\n) => {\r\n  const endpoint = `http://localhost:5000/questions?amount=${amount}&difficulty=${difficulty}`;\r\n  const data = await (await fetch(endpoint)).json();\r\n  console.log(data.results)\r\n  return data.results.map((question: Question) => ({\r\n    ...question,\r\n    answers: shuffleArray([\r\n      ...question.incorrect_answers,\r\n      question.correct_answer,\r\n    ]),\r\n  }));\r\n};\r\n\r\nexport const fetchAllQuestions = async () => {\r\n  const endpoint = 'http://localhost:5000/questions'\r\n  const data = await (await fetch(endpoint)).json();\r\n  console.log(data.results)\r\n  return data.results\r\n}\r\n\r\nexport const addQuestion = async (question: Question) => {\r\n  const endpoint = 'http://localhost:5000/questions/new';\r\n  const data = fetch(\r\n    endpoint,\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(question)\r\n    }\r\n  )\r\n  .then(response => response.json())\r\n  .then(question => console.log('Success: ', question))\r\n  .catch((error) => console.error('Error: ', error))\r\n}\r\n\r\nexport const deleteQuestion = async (_id: string) => {\r\n  const endpoint = `http://localhost:5000/questions/delete/${_id}`\r\n  await fetch(\r\n    endpoint,\r\n    {\r\n      method: 'DELETE',\r\n      body: _id\r\n    }\r\n  )\r\n  .then(() => console.log(\"Successfully deleted question: \", _id))\r\n  .catch((error) => console.error(error))\r\n}\r\n","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\utils.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\createQuestions\\CreateQuestionsPage.tsx",["157","158","159","160","161"],"import React, { useState } from 'react';\r\nimport { Question, QuestionType, addQuestion } from '../../API';\r\nimport { CreateQuestionPageStyle, CreateQuestionStyle } from './CreateQuestion.styles'\r\n\r\nexport const CreateQuestionsPage = () => {\r\n    const [categories, setCategories] = useState(\r\n        ['movies', 'music', 'television', 'geography', 'other']\r\n    );\r\n    const [loading, setLoading] = useState(false);\r\n    const [question, setQuestion] = useState('');\r\n    const [difficulty, setDifficulty] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [newCategory, setNewCategory] = useState('');\r\n    const [correctAnswer, setCorrectAnswer] = useState('');\r\n    const [incorrectAnswers, setIncorrectAnswers] = useState<string[]>(['', '', ''])\r\n\r\n    const handleSubmit = async () => {\r\n        setLoading(true);\r\n        const newQuestion: Question = {\r\n            category,\r\n            correct_answer: correctAnswer,\r\n            difficulty,\r\n            question,\r\n            incorrect_answers: [],\r\n            type: QuestionType.MULTIPLE_CHOICE,\r\n            _id: ''\r\n        }\r\n        if (type === 'multiple choice') {\r\n            newQuestion.incorrect_answers = incorrectAnswers;\r\n            newQuestion.type = QuestionType.MULTIPLE_CHOICE\r\n        }\r\n        if (type === 'true or false') {\r\n            newQuestion.incorrect_answers = [];\r\n            newQuestion.type = QuestionType.TRUE_FALSE\r\n        }\r\n        if (type === 'open ended') {\r\n            newQuestion.incorrect_answers = [];\r\n            newQuestion.type = QuestionType.OPEN_ENDED\r\n        }\r\n        if (category === 'other') {\r\n            newQuestion.category = newCategory.toLowerCase()\r\n        }\r\n        await addQuestion(newQuestion)\r\n        .then(() => {\r\n            setCategory('');\r\n            setCorrectAnswer('');\r\n            setDifficulty('');\r\n            setIncorrectAnswers(['','','']);\r\n            setNewCategory('');\r\n            setQuestion('');\r\n            setType('')\r\n        })\r\n        .then(() => {\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    const toggleDifficulty = (level: string) => {\r\n        if (level === difficulty) {\r\n            setDifficulty('')\r\n        } else {\r\n            setDifficulty(level)\r\n        }\r\n    }\r\n\r\n    const toggleType = (level: string) => {\r\n        if (level.toLowerCase() === type) {\r\n            setType('')\r\n        } else {\r\n            setType(level.toLowerCase())\r\n        }\r\n    }\r\n\r\n    const toggleCategory = (level: string) => {\r\n        if (level.toLowerCase() === category) {\r\n            setCategory('')\r\n        } else {\r\n            setCategory(level.toLowerCase())\r\n        }\r\n    }\r\n\r\n    const toggleTF = (choice: string) => {\r\n        if (correctAnswer === choice) {\r\n            setCorrectAnswer('')\r\n        } else {\r\n            setCorrectAnswer(choice)\r\n        }\r\n    }\r\n\r\n    const checkWrongAnswers = () => {\r\n        let docs = document.getElementsByClassName('incorrect-answer');\r\n        for (let doc of Array.from(docs)) {\r\n            console.log(incorrectAnswers)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <CreateQuestionPageStyle />\r\n            <header>\r\n                <h1>Question Creation Space</h1>\r\n            </header>\r\n            <CreateQuestionStyle>\r\n                <form>\r\n                    <label className='field-label'>Difficulty:</label>\r\n                    <br />\r\n                    <input\r\n                    style={\r\n                        difficulty === 'easy' ?\r\n                        {boxShadow: '0 0 15px cyan'} :\r\n                        {}\r\n                    }\r\n                    className=\"button\"\r\n                    type=\"button\"\r\n                    value='easy'\r\n                    name=\"easy\"\r\n                    id=\"easy\"\r\n                    onClick={(e) => toggleDifficulty(e.currentTarget.value)}\r\n                    />\r\n                    <input\r\n                    style={\r\n                        difficulty === 'medium' ?\r\n                        {boxShadow: '0 0 15px cyan'} :\r\n                        {}\r\n                    }\r\n                    className=\"button\"\r\n                    type=\"button\"\r\n                    value='medium'\r\n                    name=\"medium\"\r\n                    id=\"medium\"\r\n                    onClick={(e) => toggleDifficulty(e.currentTarget.value)}\r\n                    />\r\n                    <input\r\n                    style={\r\n                        difficulty === 'hard' ?\r\n                        {boxShadow: '0 0 15px cyan'} :\r\n                        {}\r\n                    }\r\n                    className=\"button\"\r\n                    type=\"button\"\r\n                    value='hard'\r\n                    name=\"hard\"\r\n                    id=\"hard\"\r\n                    onClick={(e) => toggleDifficulty(e.currentTarget.value)}\r\n                    />\r\n                    <br />\r\n                    <label className='field-label'>Type of question:</label>\r\n                    <br />\r\n                    <input\r\n                    style={\r\n                        type === 'multiple choice' ?\r\n                        {boxShadow: '0 0 15px cyan'} :\r\n                        {}\r\n                    }\r\n                    className=\"button\"\r\n                    type=\"button\"\r\n                    value=\"Multiple Choice\"\r\n                    onClick={(e) => toggleType(e.currentTarget.value)}\r\n                    />\r\n                    <input\r\n                    style={\r\n                        type === 'true or false' ?\r\n                        {boxShadow: '0 0 15px cyan'} :\r\n                        {}\r\n                    }\r\n                    className=\"button\"\r\n                    type=\"button\"\r\n                    value=\"True or False\"\r\n                    onClick={(e) => toggleType(e.currentTarget.value)}\r\n                    />\r\n                    <input\r\n                    style={\r\n                        type === 'open ended' ?\r\n                        {boxShadow: '0 0 15px cyan'} :\r\n                        {}\r\n                    }\r\n                    className=\"button\"\r\n                    type=\"button\"\r\n                    value=\"Open Ended\"\r\n                    onClick={(e) => toggleType(e.currentTarget.value)}\r\n                    />\r\n                    <br />\r\n                    <label className='field-label'>Category (pick one):</label>\r\n                    <br />\r\n                    {categories.map(\r\n                        (cat) => (\r\n                            <input\r\n                            style={\r\n                                cat === category ?\r\n                                {boxShadow: '0 0 15px cyan'} :\r\n                                {}\r\n                            }\r\n                            className=\"button\"\r\n                            type=\"button\"\r\n                            value={categories.includes(cat) ? cat : newCategory}\r\n                            onClick={(e) => toggleCategory(e.currentTarget.value)}\r\n                            />\r\n                        )\r\n                    )}\r\n                    <br />\r\n                    {!categories.includes(category) ||\r\n                    category === 'other' && \r\n                    <>\r\n                        <input\r\n                        type='text'\r\n                        id='category'\r\n                        className='question-input'\r\n                        autoFocus\r\n                        value={\r\n                            category !== 'other' ?\r\n                            category :\r\n                            newCategory\r\n                        }\r\n                        placeholder='Category'\r\n                        onChange={(e) => setNewCategory(e.currentTarget.value)}\r\n                        />\r\n                        <br />\r\n                    </>\r\n                    }\r\n                    <label className='field-label'>Question:</label>\r\n                    <br />\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"question\"\r\n                    id=\"question\"\r\n                    className='question-input'\r\n                    value={question}\r\n                    onChange={(e) => setQuestion(e.currentTarget.value)}\r\n                    placeholder='Type your question here...'\r\n                    />\r\n                    <br />\r\n                    {type !== '' && <label className='field-label'>Answer:</label>}\r\n                    <br />\r\n                    {\r\n                    type === 'multiple choice' ?\r\n                    <div id='multiple-choice-answers'>\r\n                        <input\r\n                        type='text'\r\n                        className='question-input correct-answer'\r\n                        id='correct-answer'\r\n                        placeholder='Correct answer...'\r\n                        value={correctAnswer}\r\n                        onChange={(e) => setCorrectAnswer(e.currentTarget.value)}\r\n                        />\r\n                        <br />\r\n                        <input\r\n                        type='text'\r\n                        className='question-input incorrect-answer'\r\n                        id='incorrect-answer'\r\n                        placeholder='Incorrect answer...'\r\n                        value={incorrectAnswers[0]}\r\n                        onChange={(e) => (\r\n                            setIncorrectAnswers(\r\n                                [\r\n                                    e.currentTarget.value,\r\n                                    incorrectAnswers[1],\r\n                                    incorrectAnswers[2],\r\n                                ]\r\n                            )\r\n                            )}\r\n                        />\r\n                        <br />\r\n                        <input\r\n                        type='text'\r\n                        className='question-input incorrect-answer'\r\n                        id ='incorrect-answer'\r\n                        placeholder='Incorrect answer...'\r\n                        value={incorrectAnswers[1]}\r\n                        onChange={(e) => (\r\n                            setIncorrectAnswers(\r\n                                [\r\n                                    incorrectAnswers[0],\r\n                                    e.currentTarget.value,\r\n                                    incorrectAnswers[2],\r\n                                ]\r\n                            )\r\n                            )}\r\n                        />\r\n                        <br />\r\n                        <input\r\n                        type='text'\r\n                        className='question-input incorrect-answer'\r\n                        id='incorrect-answer'\r\n                        placeholder='Incorrect answer...'\r\n                        value={incorrectAnswers[2]}\r\n                        onChange={(e) => (\r\n                            setIncorrectAnswers(\r\n                                [\r\n                                    incorrectAnswers[0],\r\n                                    incorrectAnswers[1],\r\n                                    e.currentTarget.value,\r\n                                ]\r\n                            )\r\n                            )}\r\n                        />\r\n                        <br />\r\n                        <input type='button' className='button' value='+' />\r\n                    </div> :\r\n                    type === 'true or false' ?\r\n                    <>\r\n                        <input\r\n                        style={\r\n                            correctAnswer === 'true' ?\r\n                            {boxShadow: '0 0 15px cyan'} :\r\n                            {}\r\n                        }\r\n                        type='button'\r\n                        className='button'\r\n                        id='true'\r\n                        value='true'\r\n                        onClick={() => toggleTF('true')}\r\n                        />\r\n                        <input\r\n                        style={\r\n                            correctAnswer === 'false' ?\r\n                            {boxShadow: '0 0 15px cyan'} :\r\n                            {}\r\n                        }\r\n                        type='button'\r\n                        className='button'\r\n                        id='false'\r\n                        value='false'\r\n                        onClick={() => toggleTF('false')}\r\n                        />\r\n                    </> :\r\n                    type === 'open ended' ?\r\n                    <input type='text'\r\n                    className='question-input'\r\n                    id='correct-answer'\r\n                    placeholder='Correct answer...'\r\n                    onChange={(e) => setCorrectAnswer(e.currentTarget.value)}\r\n                    /> :\r\n                    null\r\n                    }\r\n                    <br /><br />\r\n                </form>\r\n            </CreateQuestionStyle>\r\n            <input\r\n            className=\"button\"\r\n            type=\"submit\"\r\n            value=\"Submit Question\"\r\n            id=\"submit\"\r\n            disabled={loading}\r\n            onClick={() => handleSubmit()}\r\n            />\r\n        </>\r\n    )\r\n}","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\quizGame\\QuizGame.tsx",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\App.styles.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\quizGame\\QuizGame.styles.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\createQuestions\\CreateQuestion.styles.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\navigation\\index.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\navigation\\Navigation.tsx",["162"],"import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { QuizGame, CreateQuestionsPage, HomePage, ViewQuestionsPage } from '../../pages';\r\n\r\nexport const Navigation = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Route\r\n        exact\r\n        path='/'\r\n        component={HomePage}\r\n      />\r\n      <Route\r\n        path='/play/trivia'\r\n        component={QuizGame}\r\n      />\r\n      <Route\r\n        path='/create/question'\r\n        component={CreateQuestionsPage}\r\n      />\r\n      <Route\r\n        path='/view/questions'\r\n        component={ViewQuestionsPage}\r\n      />\r\n    </BrowserRouter>\r\n  )\r\n}","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\index.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\createQuestions\\index.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\quizGame\\index.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\homePage\\index.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\homePage\\HomePage.tsx",["163"],"import React, { useState } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport {HomePageStyle} from './HomePage.styles'\r\n\r\nexport const HomePage = () => {\r\n  let history = useHistory()\r\n\r\n  const handleClick = (route: string) => {\r\n    history.push(route)\r\n  }\r\n\r\n  return (\r\n    <HomePageStyle>\r\n      <h1>The Game</h1>\r\n      <Link\r\n      className='button'\r\n      to='/create/question'\r\n      onClick={() => handleClick('/create/question')}\r\n      >\r\n        Create Questions\r\n      </Link>\r\n      <Link\r\n      className='button'\r\n      to='/play/trivia'\r\n      onClick={() => handleClick('/play/trivia')}\r\n      >\r\n        Play Game\r\n      </Link>\r\n      <Link\r\n      className='button'\r\n      to='/view/questions'\r\n      onClick={() => handleClick('/view/questions')}\r\n      >\r\n        View Questions\r\n      </Link>\r\n    </HomePageStyle>\r\n  )\r\n}","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\questionCard\\QuestionCard.tsx",["164"],"import React from 'react';\r\nimport { AnswerObject } from '../../pages/quizGame/QuizGame';\r\nimport { QuestionStyle } from './QuestionCard.styles';\r\n\r\ntype Props = {\r\n    question: string;\r\n    answers: string[];\r\n    callback: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n    userAnswer: AnswerObject | undefined;\r\n    questionNum: number;\r\n    totalQs: number;\r\n}\r\n\r\nconst QuestionCard: React.FC<Props> = ({\r\n    question,\r\n    answers,\r\n    callback,\r\n    userAnswer,\r\n    questionNum,\r\n    totalQs,\r\n}) => (\r\n    <div>\r\n        <p className=\"number\">\r\n            Question: {questionNum} / {totalQs}\r\n        </p>\r\n        <p dangerouslySetInnerHTML={{__html: question}} />\r\n        <div>\r\n            {answers.map(answer => (\r\n                <div key={answer}>\r\n                    <button disabled={!!userAnswer} onClick={callback} value={answer}>\r\n                        <span dangerouslySetInnerHTML={{ __html: answer }} />\r\n                    </button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default QuestionCard;","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\homePage\\HomePage.styles.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\index.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\pageHeader\\index.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\questionCard\\index.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\pageHeader\\PageHeader.tsx",["165"],"import React, { useState } from 'react';\r\nimport { NavBar } from '../';\r\nimport { PageHeaderStyle } from './PageHeader.styles';\r\n\r\nexport const PageHeader = () => {\r\n  return (\r\n    <PageHeaderStyle>\r\n      <h1>Header</h1>\r\n      <NavBar />\r\n    </PageHeaderStyle>\r\n  )\r\n}","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\pageHeader\\PageHeader.styles.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\viewAllQuestions\\index.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\viewAllQuestions\\ViewAllQuestions.tsx",["166","167"],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\questionCardSmall\\index.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\questionCardSmall\\QuestionCardSmall.tsx",["168","169","170","171","172"],"import React, { useState } from 'react';\r\nimport { Question } from '../../API';\r\nimport { QuestionCardSmallStyle } from './QuestionCardSmall.styles'\r\nimport { capitalize } from '../../utils';\r\n\r\ninterface IQuestionProps {\r\n  question: Question\r\n}\r\n\r\nexport const QuestionCardSmall = (props: React.PropsWithChildren<IQuestionProps>) => {\r\n  let {\r\n    category,\r\n    correct_answer,\r\n    question,\r\n    incorrect_answers,\r\n    type,\r\n    difficulty\r\n  } = props.question\r\n\r\n  const CategoryColors = {\r\n    'movies': 'blue',\r\n    'music': 'red',\r\n    'tv': 'yellow'\r\n  }\r\n\r\n\r\n  return (\r\n    <QuestionCardSmallStyle>\r\n      <header\r\n        style={\r\n          category === 'movies' ?\r\n          {backgroundColor: 'blue'} :\r\n          category === 'music' ?\r\n          {backgroundColor: 'yellow'} :\r\n          category === 'television' ?\r\n          {backgroundColor: 'red'} :\r\n          {backgroundColor: 'black'}\r\n        }\r\n      >\r\n        <h2>{capitalize(category)}</h2>\r\n      </header>\r\n      <div id='content'>\r\n        <h3>{question}</h3>\r\n        <p id='answer'>{capitalize(correct_answer)}</p>\r\n      </div>\r\n    </QuestionCardSmallStyle>\r\n  )\r\n}","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\questionCardSmall\\QuestionCardSmall.styles.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\navBar\\index.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\navBar\\NavBar.tsx",["173","174"],"import React from 'react';\r\nimport { BrowserRouter, Link, useHistory } from 'react-router-dom';\r\nimport { NavBarStyle } from './NavBar.styles';\r\n\r\nexport const NavBar = () => {\r\n  let history = useHistory()\r\n\r\n  const handleClick = (route: string) => {\r\n    history.push(route)\r\n  }\r\n\r\n  return (\r\n    <NavBarStyle>\r\n      <a href='/' onClick={() => handleClick('/')}>\r\n        Home\r\n      </a>\r\n      <a href='/play/trivia' onClick={() => handleClick('/play/trivia')}>\r\n        Play Trivia!\r\n      </a>\r\n      <a href='/create/question' onClick={() => handleClick('/create/question')}>\r\n        Create New Questions\r\n      </a>\r\n      <a href='/view/questions' onClick={() => handleClick('/view/questions')}>\r\n        View All Questions\r\n      </a>\r\n    </NavBarStyle>\r\n  )\r\n}","C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\navBar\\NavBar.styles.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\pages\\viewAllQuestions\\ViewAllQuestions.styles.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\questionIndex\\index.ts",[],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\questionIndex\\QuestionIndex.tsx",["175","176"],"C:\\Users\\acsex\\KenzieProjects\\trivia_app\\client-ts\\src\\components\\questionIndex\\QuestionIndex.styles.ts",[],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":6,"column":10,"nodeType":"183","messageId":"184","endLine":6,"endColumn":16},{"ruleId":"181","severity":1,"message":"185","line":6,"column":18,"nodeType":"183","messageId":"184","endLine":6,"endColumn":27},{"ruleId":"181","severity":1,"message":"186","line":52,"column":9,"nodeType":"183","messageId":"184","endLine":52,"endColumn":13},{"ruleId":"181","severity":1,"message":"187","line":6,"column":24,"nodeType":"183","messageId":"184","endLine":6,"endColumn":37},{"ruleId":"181","severity":1,"message":"188","line":91,"column":11,"nodeType":"183","messageId":"184","endLine":91,"endColumn":28},{"ruleId":"181","severity":1,"message":"189","line":93,"column":18,"nodeType":"183","messageId":"184","endLine":93,"endColumn":21},{"ruleId":"190","severity":1,"message":"191","line":202,"column":53,"nodeType":"192","messageId":"193","endLine":202,"endColumn":55},{"ruleId":"190","severity":1,"message":"191","line":203,"column":42,"nodeType":"192","messageId":"193","endLine":203,"endColumn":44},{"ruleId":"181","severity":1,"message":"194","line":2,"column":32,"nodeType":"183","messageId":"184","endLine":2,"endColumn":38},{"ruleId":"181","severity":1,"message":"195","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"196","line":3,"column":10,"nodeType":"183","messageId":"184","endLine":3,"endColumn":23},{"ruleId":"181","severity":1,"message":"195","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"197","line":3,"column":10,"nodeType":"183","messageId":"184","endLine":3,"endColumn":27},{"ruleId":"181","severity":1,"message":"198","line":7,"column":10,"nodeType":"183","messageId":"184","endLine":7,"endColumn":17},{"ruleId":"181","severity":1,"message":"195","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"199","line":15,"column":5,"nodeType":"183","messageId":"184","endLine":15,"endColumn":22},{"ruleId":"181","severity":1,"message":"200","line":16,"column":5,"nodeType":"183","messageId":"184","endLine":16,"endColumn":9},{"ruleId":"181","severity":1,"message":"201","line":17,"column":5,"nodeType":"183","messageId":"184","endLine":17,"endColumn":15},{"ruleId":"181","severity":1,"message":"202","line":20,"column":9,"nodeType":"183","messageId":"184","endLine":20,"endColumn":23},{"ruleId":"181","severity":1,"message":"203","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":23},{"ruleId":"181","severity":1,"message":"204","line":2,"column":25,"nodeType":"183","messageId":"184","endLine":2,"endColumn":29},{"ruleId":"181","severity":1,"message":"195","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"199","line":20,"column":5,"nodeType":"183","messageId":"184","endLine":20,"endColumn":22},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"@typescript-eslint/no-unused-vars","'option' is assigned a value but never used.","Identifier","unusedVar","'setOption' is assigned a value but never used.","'data' is assigned a value but never used.","'setCategories' is assigned a value but never used.","'checkWrongAnswers' is assigned a value but never used.","'doc' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'Switch' is defined but never used.","'useState' is defined but never used.","'QuestionStyle' is defined but never used.","'QuestionCardSmall' is defined but never used.","'loading' is assigned a value but never used.","'incorrect_answers' is assigned a value but never used.","'type' is assigned a value but never used.","'difficulty' is assigned a value but never used.","'CategoryColors' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]